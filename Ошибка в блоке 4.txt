Ошибка в блоке 4

{
	"name": "KeyError",
	"message": "'q_from_mw'",
	"stack": "\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mKeyError\u001b[39m                                  Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32mc:\\Users\\Globa\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3812\u001b[39m, in \u001b[36mIndex.get_loc\u001b[39m\u001b[34m(self, key)\u001b[39m\n\u001b[32m   3811\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m3812\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_engine\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3813\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/index.pyx:167\u001b[39m, in \u001b[36mpandas._libs.index.IndexEngine.get_loc\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/index.pyx:196\u001b[39m, in \u001b[36mpandas._libs.index.IndexEngine.get_loc\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/hashtable_class_helper.pxi:7088\u001b[39m, in \u001b[36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[36mFile \u001b[39m\u001b[32mpandas/_libs/hashtable_class_helper.pxi:7096\u001b[39m, in \u001b[36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[39m\u001b[34m()\u001b[39m\n\n\u001b[31mKeyError\u001b[39m: 'q_from_mw'\n\nThe above exception was the direct cause of the following exception:\n\n\u001b[31mKeyError\u001b[39m                                  Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[5]\u001b[39m\u001b[32m, line 16\u001b[39m\n\u001b[32m     13\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m Com1, Com2, Com3 \u001b[38;5;129;01min\u001b[39;00m combinations:\n\u001b[32m     14\u001b[39m     \u001b[38;5;66;03m# --- Модель С РГ ---\u001b[39;00m\n\u001b[32m     15\u001b[39m     net_with_RG = network(is_distributed=\u001b[32m1\u001b[39m, Com1=Com1, Com2=Com2, Com3=Com3)\n\u001b[32m---> \u001b[39m\u001b[32m16\u001b[39m     total_p_with_RG, line_p_with_RG, trafo_p_with_RG = \u001b[43mcalculate_losses\u001b[49m\u001b[43m(\u001b[49m\u001b[43mnet_with_RG\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m     17\u001b[39m     results_with_RG.append({\n\u001b[32m     18\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mCom1\u001b[39m\u001b[33m'\u001b[39m: Com1, \u001b[33m'\u001b[39m\u001b[33mCom2\u001b[39m\u001b[33m'\u001b[39m: Com2, \u001b[33m'\u001b[39m\u001b[33mCom3\u001b[39m\u001b[33m'\u001b[39m: Com3,\n\u001b[32m     19\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mTotal Losses\u001b[39m\u001b[33m'\u001b[39m: total_p_with_RG,\n\u001b[32m     20\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mLine Losses\u001b[39m\u001b[33m'\u001b[39m: line_p_with_RG,\n\u001b[32m     21\u001b[39m         \u001b[33m'\u001b[39m\u001b[33mTransformer Losses\u001b[39m\u001b[33m'\u001b[39m: trafo_p_with_RG\n\u001b[32m     22\u001b[39m     })\n\u001b[32m     24\u001b[39m     \u001b[38;5;66;03m# --- Модель БЕЗ РГ ---\u001b[39;00m\n\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[4]\u001b[39m\u001b[32m, line 21\u001b[39m, in \u001b[36mcalculate_losses\u001b[39m\u001b[34m(net)\u001b[39m\n\u001b[32m     18\u001b[39m \u001b[38;5;66;03m# Или можно использовать res_line.pl_mw и res_line.ql_mw, но они могут быть не всегда доступны\u001b[39;00m\n\u001b[32m     19\u001b[39m \u001b[38;5;66;03m# Более надежный способ - суммировать активные мощности на концах линий\u001b[39;00m\n\u001b[32m     20\u001b[39m total_line_losses_p = (res_lines[\u001b[33m'\u001b[39m\u001b[33mp_from_mw\u001b[39m\u001b[33m'\u001b[39m] + res_lines[\u001b[33m'\u001b[39m\u001b[33mp_to_mw\u001b[39m\u001b[33m'\u001b[39m]).sum()\n\u001b[32m---> \u001b[39m\u001b[32m21\u001b[39m total_line_losses_q = (\u001b[43mres_lines\u001b[49m\u001b[43m[\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mq_from_mw\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m]\u001b[49m + res_lines[\u001b[33m'\u001b[39m\u001b[33mq_to_mw\u001b[39m\u001b[33m'\u001b[39m]).sum()\n\u001b[32m     23\u001b[39m \u001b[38;5;66;03m# Потери в трансформаторах\u001b[39;00m\n\u001b[32m     24\u001b[39m res_trafos = net.res_trafo\n\n\u001b[36mFile \u001b[39m\u001b[32mc:\\Users\\Globa\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pandas\\core\\frame.py:4113\u001b[39m, in \u001b[36mDataFrame.__getitem__\u001b[39m\u001b[34m(self, key)\u001b[39m\n\u001b[32m   4111\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m.columns.nlevels > \u001b[32m1\u001b[39m:\n\u001b[32m   4112\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._getitem_multilevel(key)\n\u001b[32m-> \u001b[39m\u001b[32m4113\u001b[39m indexer = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mcolumns\u001b[49m\u001b[43m.\u001b[49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   4114\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[32m   4115\u001b[39m     indexer = [indexer]\n\n\u001b[36mFile \u001b[39m\u001b[32mc:\\Users\\Globa\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3819\u001b[39m, in \u001b[36mIndex.get_loc\u001b[39m\u001b[34m(self, key)\u001b[39m\n\u001b[32m   3814\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(casted_key, \u001b[38;5;28mslice\u001b[39m) \u001b[38;5;129;01mor\u001b[39;00m (\n\u001b[32m   3815\u001b[39m         \u001b[38;5;28misinstance\u001b[39m(casted_key, abc.Iterable)\n\u001b[32m   3816\u001b[39m         \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28many\u001b[39m(\u001b[38;5;28misinstance\u001b[39m(x, \u001b[38;5;28mslice\u001b[39m) \u001b[38;5;28;01mfor\u001b[39;00m x \u001b[38;5;129;01min\u001b[39;00m casted_key)\n\u001b[32m   3817\u001b[39m     ):\n\u001b[32m   3818\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m InvalidIndexError(key)\n\u001b[32m-> \u001b[39m\u001b[32m3819\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01merr\u001b[39;00m\n\u001b[32m   3820\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[32m   3821\u001b[39m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[32m   3822\u001b[39m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[32m   3823\u001b[39m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[32m   3824\u001b[39m     \u001b[38;5;28mself\u001b[39m._check_indexing_error(key)\n\n\u001b[31mKeyError\u001b[39m: 'q_from_mw'"
}